@function pow($number, $exponent) {
  // https://css-tricks.com/snippets/sass/power-function/
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

@function luma($colour){  
  // https://madebymike.com.au/writing/accessible-contrast-with-less-and-sass/
  $rgba: red($colour), green($colour), blue($colour);
  $rgba2: ();
  @for $i from 1 through 3 {
    $rgb: nth($rgba, $i);
    $rgb: $rgb / 255;
    $rgb: if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));
    $rgba2: append($rgba2, $rgb);
  }
  @return (0.2126 * nth($rgba2, 1) + 0.7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3)) * 100;
}

@function contrast_ratio($colour1, $colour2) {
  $luma1: luma($colour1) + 5;
  $luma2: luma($colour2) + 5;
  $ratio: $luma1 / $luma2;
  @if $luma1 < $luma2 {
    $ratio: 1 / $ratio;
  }
  @return $ratio;
}

@function contrast($colour, $bgcolour: $colour) {

  $threshold: 7; // 4.5 = WCAG AA,7= WCAG AAA
  $list: 10 20 30 40 50 60 70 80 90 100;
  @each $percent in $list {
    $lighter: #fff; //lighten($bgcolour, $percent);
    $darker: #000; //darken($bgcolour, $percent);
    $darker-ratio: contrast_ratio($colour, $darker);
    $lighter-ratio: contrast_ratio($colour, $lighter);
    @if($lighter-ratio > $darker-ratio){
      @if ($lighter-ratio > $threshold){
        @return $lighter;
      }
    }
    @if($darker-ratio > $lighter-ratio){
      @if ($darker-ratio > $threshold){
        @return $darker;
      }
    }
  }
  @return if(lightness($colour) < 51, #FFF, #000)
}